 public bool checkSafeCheck(Pieces[,] pieces, int whitekingRow, int whitekingColumn, int blackkingRow, int blackkingColumn)
        {
            checkCheckMeh = false;

            for (int z1 = 1; z1 < 9; z1++)
            {  //Find Threatening piece
                for (int j = 1; j < 9; j++)
                {
                    if (pieces[whitekingRow, whitekingColumn] != null && pieces[z1, j] != null && pieces[z1, j].pieceName()[0] != pieces[whitekingRow, whitekingColumn].pieceName()[0] && pieces[z1, j].pieceCollision(pieces, z1, j, whitekingRow, whitekingColumn) )
                    {

                        checkCheckMeh = true;
                    }
                }
            }

            for (int z1 = 1; z1 < 9; z1++)
            {  //Find Threatening piece
                for (int j = 1; j < 9; j++)
                {
                    if (pieces[blackkingRow, blackkingColumn] != null && pieces[z1, j] != null && pieces[z1, j].pieceName()[0] != pieces[blackkingRow, blackkingColumn].pieceName()[0] && pieces[z1, j].pieceCollision(pieces, z1, j, blackkingRow, blackkingColumn))
                    {
                        checkCheckMeh = true;
                    }
                }
            }
            return checkCheckMeh;
        }







